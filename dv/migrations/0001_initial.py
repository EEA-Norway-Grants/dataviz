# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-02 20:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import dv.lib.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptype', models.SmallIntegerField(choices=[(1, 'Programme'), (2, 'Project')])),
                ('country', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrganisationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.SmallIntegerField(choices=[(1, 'National Focal Point'), (2, 'Donor State'), (3, 'Programme Operator'), (4, 'Donor Programme Partner'), (5, 'Programme Partner'), (6, 'Project Promoter'), (7, 'Donor Project Partner'), (8, 'Project Partner')])),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Organisation')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrganisationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.SmallIntegerField(choices=[(1, 'Private sector'), (2, 'Public sector'), (3, 'Civil society'), (4, 'Education'), (5, 'International institutions'), (6, 'Other')])),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PrioritySector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(1, 'EEA'), (2, 'Norway')])),
                ('code', models.CharField(max_length=4, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('status', models.SmallIntegerField(choices=[(1, 'Approved'), (2, 'Implementation')])),
                ('summary', models.TextField()),
                ('allocation', models.PositiveIntegerField()),
                ('co_financing', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Programme_ProgrammeArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammeArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('short_name', models.CharField(max_length=32)),
                ('order', models.SmallIntegerField()),
                ('objective', models.TextField()),
                ('gross_allocation', models.FloatField()),
                ('net_allocation', models.PositiveIntegerField()),
                ('priority_sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.PrioritySector')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammeIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.IntegerField()),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Indicator')),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Outcome')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
                ('programme_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammeOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation', models.FloatField()),
                ('co_financing', models.FloatField()),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Outcome')),
                ('programme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'In Progress'), (2, 'Completed'), (0, 'Terminated')])),
                ('code', models.CharField(max_length=9, unique=True)),
                ('name', models.CharField(max_length=512)),
                ('nuts', models.CharField(max_length=5)),
                ('allocation', models.PositiveIntegerField()),
                ('programme_co_financing', models.PositiveIntegerField()),
                ('project_co_financing', models.PositiveIntegerField()),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Outcome')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('gross_allocation_eea', models.PositiveIntegerField()),
                ('gross_allocation_norway', models.PositiveIntegerField()),
                ('net_allocation_eea', models.PositiveIntegerField()),
                ('net_allocation_norway', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='project',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.State'),
        ),
        migrations.AddField(
            model_name='programme_programmearea',
            name='programme_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='programme',
            name='programme_areas',
            field=models.ManyToManyField(through='dv.Programme_ProgrammeArea', to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='programme',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.State'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='programme_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='organisationrole',
            name='programme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Programme'),
        ),
        migrations.AddField(
            model_name='organisationrole',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Project'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='orgtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.OrganisationType'),
        ),
        migrations.AlterUniqueTogether(
            name='programme_programmearea',
            unique_together=set([('programme', 'programme_area')]),
        ),
    ]
